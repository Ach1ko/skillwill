// Pirveli Davaleba

function expo(number, power, callback) {
    if (power === 0) {
        callback(1);
    } else {
        expo(number, power - 1, function (result) {
            callback(result * number);
        });
    }
}
expo(5, 3, function (result) {
    console.log(result);
});

// Meore Davaleba

const url = 'https://jsonplaceholder.typicode.com/posts';

fetch(url)
    .then(response => response.json())
    .then(data => {
        data.forEach(post => {
            const postElement = document.createElement('div');
            postElement.innerHTML = `
        <h2>${post.title}</h2>
        <p>${post.body}</p>
      `;
            document.body.appendChild(postElement);
        });
    })
    .catch(error => {
        console.log('An error occurred:', error);
    });

// Mesame Davaleba

function deepCopyObject(obj) {
    return new Promise((resolve, reject) => {
        if (typeof obj !== 'object' || obj === null) {
            reject(new Error('Invalid'));
        } else {
            try {
                const copiedObj = JSON.parse(JSON.stringify(obj));
                resolve(copiedObj);
            } catch (error) {
                reject(error);
            }
        }
    });
}

const obj = { foo: 'bar', nested: { a: 1, b: 2 } };

deepCopyObject(obj)
    .then(copiedObj => {
        console.log('Copied object:', copiedObj);
    })
    .catch(error => {
        console.error('Error:', error);
    });


